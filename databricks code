name: DEV/UAT/Prod Deployment-databricks
on:
  workflow_dispatch:
    inputs:
      organization_or_username:
        description: 'Specify the organization or username to deploy code from'
        required: true
        default: 'Mars-DNA'

      repository:
        description: 'Specify the repository to deploy code from'
        required: true
        default: 'Food-Nutrition-SRM'

      branch:
        description: 'Specify the branch to deploy code from'
        required: true
        default: 'develop'

      environment:
        description: 'Choose the environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - uat
          - prod

env:
  organization_or_username: ${{ github.event.inputs.organization_or_username || 'Mars-DNA' }}
  repository: ${{ github.event.inputs.repository || 'Food-Nutrition-SRM' }}
  branch: ${{ github.event.inputs.branch || 'develop' }}
  environment: ${{ github.event.inputs.environment || 'dev' }}
  PROJECT_NAME: "Food-Nutrition-SRM"
  PYTHON_VERSION: 3.8

permissions:
  contents: read
  pull-requests: write
  id-token: write

jobs:
  build:
    name: Build Wheel File
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.organization_or_username }}/${{ env.repository }}
          ref: ${{ env.branch }}
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Build Wheel File
        run: |
          python setup.py sdist bdist_wheel
          ls -ltr dist

      - name: Publish Wheel File Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ format('{0}_Wheel', env.PROJECT_NAME) }}
          path: dist

  deploy-dev:
    name: Deploy to Databricks (Dev)
    runs-on: globaldnadeveus2aks
    needs: build
    if: ${{ github.event.inputs.environment == 'dev' }}
    environment: dev

    steps:
      - name: Checkout Repository for Deploy
        uses: actions/checkout@v4
        with:
          repository: ${{ env.organization_or_username }}/${{ env.repository }}
          ref: ${{ env.branch }}
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install azcopy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          sudo apt-get update
          sudo apt-get install -y azcopy
          rm -f packages-microsoft-prod.deb

      - name: Az CLI Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install Databricks CLI
        run: |
          python -m pip install --upgrade pip
          pip install databricks-cli

      - name: Configure Databricks Connection
        run: |
          echo "[DEFAULT]" > ~/.databrickscfg
          echo "host = ${{ vars.DATABRICKS_HOST }}" >> ~/.databrickscfg
          echo "token = ${{ secrets.DATABRICKS_TOKEN }}" >> ~/.databrickscfg

      - name: Download Wheel Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ format('{0}_Wheel', env.PROJECT_NAME) }}

      - name: Upload Wheel File to Azure Storage
        env:
          AZURE_STORAGE_ACCOUNT: fndatalakeeus2devsa
          AZURE_CONTAINER_NAME: output
          AZCOPY_AUTO_LOGIN_TYPE: AZCLI
          AZCOPY_TENANT_ID: ${{ secrets.TENANT_ID }}
        run: |
          azcopy copy '${{ format('{0}_Wheel', env.PROJECT_NAME) }}/*.whl' 'https://fndatalakeeus2devsa.blob.core.windows.net/output/SRM/WHEEL/'

      - name: Copy Files to Databricks Workspace (Dev)
        run: |
          databricks workspace import_dir SRM/ /Shared/${{ env.PROJECT_NAME }}/dev/ -o
          databricks workspace import_dir SRM/ /Release/${{ env.PROJECT_NAME }}/dev/ -o

  deploy-uat:
    name: Deploy to Databricks (UAT)
    runs-on: globaldnadeveus2aks
    needs: build
    if: ${{ github.event.inputs.environment == 'uat' }}
    environment: uat

    steps:
      - name: Checkout Repository for Deploy
        uses: actions/checkout@v4
        with:
          repository: ${{ env.organization_or_username }}/${{ env.repository }}
          ref: ${{ env.branch }}
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install azcopy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          sudo apt-get update
          sudo apt-get install -y azcopy
          rm -f packages-microsoft-prod.deb

      - name: Az CLI Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install Databricks CLI
        run: |
          python -m pip install --upgrade pip
          pip install databricks-cli

      - name: Configure Databricks Connection
        run: |
          echo "[DEFAULT]" > ~/.databrickscfg
          echo "host = ${{ vars.DATABRICKS_HOST }}" >> ~/.databrickscfg
          echo "token = ${{ secrets.DATABRICKS_TOKEN }}" >> ~/.databrickscfg

      - name: Download Wheel Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ format('{0}_Wheel', env.PROJECT_NAME) }}

      - name: Upload Wheel File to Azure Storage
        env:
          AZURE_STORAGE_ACCOUNT: fndatalakeeus2devsa
          AZURE_CONTAINER_NAME: output
          AZCOPY_AUTO_LOGIN_TYPE: AZCLI
          AZCOPY_TENANT_ID: ${{ secrets.TENANT_ID }}
        run: |
          azcopy copy '${{ format('{0}_Wheel', env.PROJECT_NAME) }}/*.whl' 'https://fndatalakeeus2devsa.blob.core.windows.net/output/SRM/WHEEL/'

      - name: Copy Files to Databricks Workspace (UAT)
        run: |
          databricks workspace import_dir SRM/ /Shared/${{ env.PROJECT_NAME }}/uat/ -o
          databricks workspace import_dir SRM/ /Release/${{ env.PROJECT_NAME }}/uat/ -o

  deploy-prod:
    name: Deploy to Databricks (Prod)
    runs-on: globaldnaprodeus2aks
    needs: build
    if: ${{ github.event.inputs.environment == 'prod' }}
    environment: prod

    steps:
      - name: Checkout Repository for Deploy
        uses: actions/checkout@v4
        with:
          repository: ${{ env.organization_or_username }}/${{ env.repository }}
          ref: ${{ env.branch }}
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install azcopy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          sudo apt-get update
          sudo apt-get install -y azcopy
          rm -f packages-microsoft-prod.deb

      - name: Az CLI Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_PROD }}

      - name: Install Databricks CLI
        run: |
          python -m pip install --upgrade pip
          pip install databricks-cli

      - name: Configure Databricks Connection
        run: |
          echo "[DEFAULT]" > ~/.databrickscfg
          echo "host = ${{ vars.DATABRICKS_HOST }}" >> ~/.databrickscfg
          echo "token = ${{ secrets.DATABRICKS_TOKEN }}" >> ~/.databrickscfg

      - name: Download Wheel Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ format('{0}_Wheel', env.PROJECT_NAME) }}

      - name: Upload Wheel File to Azure Storage
        env:
          AZURE_STORAGE_ACCOUNT: fndatalakeeus2prodsa
          AZURE_CONTAINER_NAME: output
          AZCOPY_AUTO_LOGIN_TYPE: AZCLI
          AZCOPY_TENANT_ID: ${{ secrets.TENANT_ID }}
        run: |
          azcopy copy '${{ format('{0}_Wheel', env.PROJECT_NAME) }}/*.whl' 'https://fndatalakeeus2prodsa.blob.core.windows.net/output/SRM/WHEEL/'

      - name: Copy Files to Databricks Workspace (Prod)
        run: |
          databricks workspace import_dir SRM/ /Shared/${{ env.PROJECT_NAME }}/ -o
          databricks workspace import_dir SRM/ /Release/${{ env.PROJECT_NAME }}/ -o
